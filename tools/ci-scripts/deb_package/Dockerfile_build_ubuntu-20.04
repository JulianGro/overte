# Copyright 2022-2025 Overte e.V.
# SPDX-License-Identifier: Apache-2.0

# Docker file for building Overte Server
# Example build: docker build -t overte/overte-server-build:0.1.5-ubuntu-20.04 -f Dockerfile_build_ubuntu-20.04 .
FROM ubuntu:20.04
LABEL maintainer="Julian GroÃŸ (julian.gro@overte.org)"
LABEL description="Development image for Overte Domain server and assignment clients."

# Don't use any frontend when installing packages during the creation of this container
ARG DEBIAN_FRONTEND=noninteractive

RUN echo UTC >/etc/timezone
# Installing via dependency causes interactive hang:
RUN apt-get update && apt-get -y install tzdata

# Install Conan
RUN apt-get -y install python3-pip
RUN pip3 install conan

# Install CMake from Kitware
RUN apt-get update
RUN apt-get -y install ca-certificates gpg wget
RUN wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /usr/share/keyrings/kitware-archive-keyring.gpg >/dev/null
RUN echo 'deb [signed-by=/usr/share/keyrings/kitware-archive-keyring.gpg] https://apt.kitware.com/ubuntu/ focal main' | tee /etc/apt/sources.list.d/kitware.list >/dev/null
RUN apt-get update
RUN rm /usr/share/keyrings/kitware-archive-keyring.gpg && apt-get -y install kitware-archive-keyring
RUN apt-get -y install cmake

# Install GCC 13 from Toolchain test PPA
RUN apt-get -y install software-properties-common
RUN add-apt-repository ppa:ubuntu-toolchain-r/test
RUN apt-get update
RUN apt-get -y install gcc-13 g++-13
# Set GCC 13 as default
RUN update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 100 --slave /usr/bin/g++ g++ /usr/bin/g++-13 --slave /usr/bin/gcov gcov /usr/bin/gcov-13

# Install Overte domain-server and assignment-client build dependencies
RUN apt-get -y install curl ninja-build git cmake g++ libssl-dev python3-distutils python3-distro mesa-common-dev libgl1-mesa-dev libharfbuzz-dev libdouble-conversion3 libxext-dev libsystemd-dev

# Install tools for package creation
RUN apt-get -y install sudo chrpath binutils dh-make

# Install locales package
RUN apt-get -y install locales
# Uncomment en_US.UTF-8 for inclusion in generation
RUN sed -i 's/^# *\(en_US.UTF-8\)/\1/' /etc/locale.gen
# Generate locale
RUN locale-gen

# Export env vars
RUN echo "export LC_ALL=en_US.UTF-8" >> ~/.bashrc
RUN echo "export LANG=en_US.UTF-8" >> ~/.bashrc
RUN echo "export LANGUAGE=en_US.UTF-8" >> ~/.bashrc

# Install tools for creating the server image
RUN apt-get -y install docker.io xz-utils

# Install tools needed for our Github Actions Workflow
Run apt-get -y install python3-boto3 python3-github zip
